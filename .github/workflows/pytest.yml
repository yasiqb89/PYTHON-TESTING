name: Run Pytest Tests #Code success with HTML report

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest junit2html 

      - name: Verify Installed Packages
        run: pip list

      - name: Debug Pytest Test Discovery
        run: pytest --collect-only  # Check if pytest can find the tests

      - name: Run tests and generate report  # Run tests with verbose output
        id: pytest_run
        run: |
          pytest --junitxml=test-results.xml -v | tee pytest_output.log
          exit ${PIPESTATUS[0]}  # Ensures the correct exit status is returned # Run pytest without specifying a folder

      - name: Show Test Summary
        run: cat pytest_output.log || echo "No pytest output available"

      - name: Convert XML to HTML Report
        if: always()
        run: |
          if [ -f test-results.xml ]; then
            python -m pip install --upgrade pip
            python -m pip install junit2html  # Ensure installation
            ~/.local/bin/junit2html test-results.xml test-report.html || junit2html test-results.xml test-report.html  # Run as executable
          else
            echo "No test-results.xml found, skipping HTML conversion."
          fi

      - name: Upload HTML Test Report  # Ensures report is uploaded even if tests fail
        if: always()  
        uses: actions/upload-artifact@v4 
        with:
          name: pytest-html-report
          path: test-report.html  # Upload the test report

      - name: Notify on Failure
        if: failure()
        run: |
            curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
            -d '{
              "state": "failure",
              "target_url": "https://github.com/${{ github.repository }}/actions",
              "description": "Tests failed ‚ùå - Check report for details",
              "context": "CI/CD Tests"
            }'